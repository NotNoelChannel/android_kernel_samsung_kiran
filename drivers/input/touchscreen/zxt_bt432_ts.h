/*
 *
 * Zinitix touch driver
 *
 * Copyright (C) 2009 Zinitix, Inc.
 *
 * This software is licensed under the terms of the GNU General Public
 * License version 2, as published by the Free Software Foundation, and
 * may be copied, distributed, and modified under those terms.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 */

#ifndef ZINITIX_HEADER
#define ZINITIX_HEADER

#define TS_DRVIER_VERSION	"1.0.23"

#define	MULTI_PROTOCOL_TYPE_B	1

#define USE_THREADED_IRQ	1

#define TOUCH_POINT_MODE	1
#define TOUCH_I2C_REGISTER_HERE	0

/* max 10 */
#define MAX_SUPPORTED_FINGER_NUM	5


/* max 8 */
#define MAX_SUPPORTED_BUTTON_NUM    2
#define SUPPORTED_BUTTON_NUM		2

/* Upgrade Method*/
#define TOUCH_ONESHOT_UPGRADE		1
/* if you use isp mode, you must add i2c device :
name = "zinitix_isp" , addr 0x50*/

/* resolution offset */
#define ABS_PT_OFFSET			(-1)

#define TOUCH_FORCE_UPGRADE		1
#define USE_CHECKSUM			1
#define CHECK_HWID			0


#define CHIP_OFF_DELAY			50	/*ms*/
#define CHIP_ON_DELAY			15	/*ms*/
#define FIRMWARE_ON_DELAY		30	/*ms*/

#define DELAY_FOR_SIGNAL_DELAY		30	/*us*/
#define DELAY_FOR_TRANSCATION		30
#define DELAY_FOR_POST_TRANSCATION	10

#define ZINITIX_TA_COVER_REGISTER

enum _zinitix_power_control {
	POWER_OFF,
	POWER_ON,
	POWER_ON_SEQUENCE,
};

/* Button Enum */
enum _zinitix_button_event {
	ICON_BUTTON_UNCHANGE,
	ICON_BUTTON_DOWN,
	ICON_BUTTON_UP,
};


/* ESD Protection */
/*second : if 0, no use. if you have to use, 3 is recommended*/
//#define	ZINITIX_ESD_TIMER_INTERVAL	1
#define	ZINITIX_ESD_TIMER_INTERVAL	0
#define ZINITIX_SCAN_RATE_HZ		100
#define ZINITIX_CHECK_ESD_TIMER		3




#define MAX_FW_PATH 255
#define TSP_FW_FILEPATH "/opt/usr/media/zinitix_fw.bin"


#define MAX_RAW_DATA_SZ		576	/*32x18*/
#define MAX_TRAW_DATA_SZ	\
	(MAX_RAW_DATA_SZ + 4*MAX_SUPPORTED_FINGER_NUM + 2)
/* preriod raw data interval*/

#define RAWDATA_DELAY_FOR_HOST		100

struct _raw_ioctl {
	int	sz;
	u8	*buf;
};

struct _reg_ioctl{
	int	addr;
	int	*val;
} ;

#define TOUCH_SEC_NORMAL_MODE	48

#define TOUCH_REF_MODE		10
#define TOUCH_NORMAL_MODE	5
#define TOUCH_DELTA_MODE	3
#define TOUCH_DND_MODE		11
#define TOUCH_SDND_MODE		6




/*  Other Things */
#define ZINITIX_INIT_RETRY_CNT	5
#define I2C_SUCCESS		0
#define I2C_FAIL		1


/*---------------------------------------------------------------------*/

/* Register Map*/
#define ZINITIX_SWRESET_CMD		0x0000
#define ZINITIX_WAKEUP_CMD		0x0001

#define ZINITIX_IDLE_CMD		0x0004
#define ZINITIX_SLEEP_CMD		0x0005

#define ZINITIX_CLEAR_INT_STATUS_CMD	0x0003
#define ZINITIX_CALIBRATE_CMD		0x0006
#define ZINITIX_SAVE_STATUS_CMD		0x0007
#define ZINITIX_SAVE_CALIBRATION_CMD	0x0008
#define ZINITIX_RECALL_FACTORY_CMD	0x000f

#define ZINITIX_SENSITIVITY	0x0020

#define	ZINITIX_I2C_CHECKSUM_WCNT	0x016a
#define	ZINITIX_I2C_CHECKSUM_RESULT	0x016c


#define ZINITIX_DEBUG_REG		0x0115	//0~7

#define ZINITIX_TOUCH_MODE		0x0010
#define ZINITIX_CHIP_REVISION		0x0011
#define ZINITIX_FIRMWARE_VERSION	0x0012

#define ZINITIX_MINOR_FW_VERSION	0x0121

#define ZINITIX_DATA_VERSION_REG	0x0013
#define ZINITIX_HW_ID			0x0014
#define ZINITIX_SUPPORTED_FINGER_NUM	0x0015
#define ZINITIX_EEPROM_INFO		0x0018
#define ZINITIX_INITIAL_TOUCH_MODE		0x0019


#define ZINITIX_TOTAL_NUMBER_OF_X	0x0060
#define ZINITIX_TOTAL_NUMBER_OF_Y	0x0061

#define ZINITIX_DELAY_RAW_FOR_HOST	0x007f

#define ZINITIX_BUTTON_SUPPORTED_NUM	0x00B0
#define ZINITIX_BUTTON_SENSITIVITY	0x00B2


#define ZINITIX_X_RESOLUTION		0x00C0
#define ZINITIX_Y_RESOLUTION		0x00C1


#define ZINITIX_POINT_STATUS_REG	0x0080
#define ZINITIX_ICON_STATUS_REG		0x00AA

#define ZINITIX_AFE_FREQUENCY		0x0100
#define ZINITIX_SHIFT_VALUE			0x012B
#define ZINITIX_U_COUNT				0x0135
#define ZINITIX_N_COUNT				0x0122

#define ZINITIX_RAWDATA_REG		0x0200

#define ZINITIX_EEPROM_INFO_REG		0x0018

#define ZINITIX_INT_ENABLE_FLAG		0x00f0
#define ZINITIX_PERIODICAL_INTERRUPT_INTERVAL	0x00f1

#define ZINITIX_BTN_WIDTH		0x016d

#define ZINITIX_CHECKSUM_RESULT	0x012c

#define ZINITIX_INIT_FLASH		0x01d0
#define ZINITIX_WRITE_FLASH		0x01d1
#define ZINITIX_READ_FLASH		0x01d2

#define ZINITIX_USB_DETECT	0x116
#define	ZINITIX_INTERNAL_FLAG_02 0x011e


/* Interrupt & status register flag bit
-------------------------------------------------
*/
#define BIT_PT_CNT_CHANGE	0
#define BIT_DOWN			1
#define BIT_MOVE			2
#define BIT_UP				3
#define BIT_PALM			4
#define BIT_PALM_REJECT		5
#define RESERVED_0			6
#define RESERVED_1			7
#define BIT_WEIGHT_CHANGE	8
#define BIT_PT_NO_CHANGE	9
#define BIT_REJECT			10
#define BIT_PT_EXIST		11
#define RESERVED_2			12
#define BIT_MUST_ZERO		13
#define BIT_DEBUG			14
#define BIT_ICON_EVENT		15

/* button */
#define BIT_O_ICON0_DOWN	0
#define BIT_O_ICON1_DOWN	1
#define BIT_O_ICON2_DOWN	2
#define BIT_O_ICON3_DOWN	3
#define BIT_O_ICON4_DOWN	4
#define BIT_O_ICON5_DOWN	5
#define BIT_O_ICON6_DOWN	6
#define BIT_O_ICON7_DOWN	7

#define BIT_O_ICON0_UP		8
#define BIT_O_ICON1_UP		9
#define BIT_O_ICON2_UP		10
#define BIT_O_ICON3_UP		11
#define BIT_O_ICON4_UP		12
#define BIT_O_ICON5_UP		13
#define BIT_O_ICON6_UP		14
#define BIT_O_ICON7_UP		15


#define SUB_BIT_EXIST		0
#define SUB_BIT_DOWN		1
#define SUB_BIT_MOVE		2
#define SUB_BIT_UP			3
#define SUB_BIT_UPDATE		4
#define SUB_BIT_WAIT		5


#define zinitix_bit_set(val, n)		((val) &= ~(1<<(n)), (val) |= (1<<(n)))
#define zinitix_bit_clr(val, n)		((val) &= ~(1<<(n)))
#define zinitix_bit_test(val, n)	((val) & (1<<(n)))
#define zinitix_swap_v(a, b, t)	((t) = (a), (a) = (b), (b) = (t))
#define zinitix_swap_16(s) (((((s) & 0xff) << 8) | (((s) >> 8) & 0xff)))

#endif /*ZINITIX_HEADER*/
//SPEC V0.1
const u16 dnd_v_diff[18][10]={
							{4140,	4440,	4520,	4480,	4570,	4660,	4630,	4660,	4740,	4690},
							{2220,	2470,	2530,	2500,	2570,	2630,	2630,	2650,	2720,	2790},
							{2180,	2500,	2560,	2540,	2600,	2630,	2660,	2670,	2730,	2800},
							{2540,	2180,	2160,	2190,	2130,	2080,	2080,	2060,	2030,	2170},
							{2180,	2230,	2270,	2230,	2310,	2360,	2380,	2360,	2410,	2600},
							{2780,	2190,	2200,	2180,	2180,	2100,	2120,	2110,	2110,	2220},
							{2220,	2210,	2200,	2220,	2230,	2280,	2290,	2320,	2330,	2630},
							{2840,	2210,	2220,	2210,	2180,	2150,	2140,	2110,	2110,	2350},
							{2180,	2200,	2170,	2190,	2160,	2240,	2220,	2250,	2230,	2750},
							{2010,	2050,	2050,	2090,	2040,	2020,	2010,	2030,	2040,	2090},
							{2650,	2130,	2180,	2160,	2200,	2230,	2240,	2200,	2160,	3630},
							{3090,	2280,	2270,	2220,	2260,	2210,	2210,	2190,	2200,	2860},
							{2950,	2180,	2170,	2220,	2210,	2240,	2230,	2230,	2240,	2150},
							{3870,	3810,	3840,	3920,	2720,	3990,	3870,	3900,	3900,	3230},
							{4450,	2700,	2660,	2690,	2570,	2700,	2690,	2690,	2680,	3050},
							{3040,	2240,	2240,	2300,	2390,	2460,	2460,	2470,	2460,	3000},
							{4860,	4410,	4460,	4510,	4160,	4810,	4830,	4850,	4860,	4410},
							{0,	0,	0,	0,	2760,	0,	0,	4310,	0,	0}};


const u16 dnd_h_diff[18][9]={
							{2030,	2090,	2030,	2020,	2010,	2020,	2080,	2160,	2100},
							{2280,	2020,	2070,	2110,	2100,	2040,	2110,	2080,	2050},
							{2030,	2080,	2040,	2040,	2040,	2040,	2080,	2140,	2040},
							{2350,	2020,	2060,	2100,	2070,	2010,	2090,	2080,	2040},
							{2020,	2040,	2030,	2050,	2020,	2020,	2080,	2110,	2160},
							{2390,	2010,	2070,	2130,	2070,	2010,	2060,	2060,	2040},
							{2200,	2020,	2090,	2130,	2030,	2030,	2060,	2060,	2290},
							{2230,	2010,	2070,	2130,	2040,	2030,	2090,	2050,	2030},
							{2400,	2020,	2080,	2100,	2000,	2020,	2060,	2060,	2440},
							{2030,	2020,	2050,	2070,	2080,	2010,	2090,	2080,	2090},
							{2010,	2020,	2010,	2020,	2060,	2020,	2120,	2060,	2040},
							{2790,	2040,	2030,	2060,	2100,	2010,	2070,	2100,	3440},
							{2040,	2030,	2080,	2100,	2040,	2010,	2060,	2100,	2390},
							{3090,	2010,	2020,	2080,	2080,	2020,	2050,	2080,	2290},
							{4590,	2030,	2100,	3280,	3200,	2110,	2030,	2080,	2960},
							{2840,	2020,	2120,	3400,	3330,	2120,	2030,	2080,	4680},
							{3640,	2010,	2060,	3480,	3250,	2120,	2030,	2090,	3240},
							{3190,	2050,	2110,	3840,	3910,	2110,	2010,	2110,	3690}};

const u16 pdnd_max[19][10] ={
							{14745,	14718,	14630,	14609,	14624,	14634,	14623,	14697,	14545,	14638},
							{16883,	17156,	17143,	17081,	17189,	17285,	17252,	17353,	17276,	17320},
							{16663,	16687,	16615,	16581,	16620,	16657,	16624,	16703,	16563,	16530},
							{16840,	17187,	17172,	17118,	17216,	17280,	17276,	17364,	17293,	17329},
							{17376,	17363,	17329,	17304,	17345,	17360,	17347,	17423,	17317,	17162},
							{17203,	17591,	17598,	17529,	17655,	17716,	17721,	17779,	17725,	17759},
							{17974,	17780,	17792,	17709,	17831,	17810,	17835,	17886,	17826,	17542},
							{17759,	17982,	17990,	17927,	18056,	18089,	18116,	18197,	18147,	18168},
							{18590,	18192,	18207,	18134,	18231,	18231,	18251,	18304,	18253,	17822},
							{18413,	18383,	18369,	18321,	18386,	18465,	18468,	18553,	18482,	18570},
							{18421,	18427,	18410,	18411,	18425,	18483,	18464,	18577,	18518,	18486},
							{17772,	18556,	18590,	18562,	18617,	18708,	18704,	18774,	18674,	20111},
							{18860,	18829,	18854,	18779,	18872,	18910,	18911,	18963,	18872,	19253},
							{17916,	19005,	19015,	18997,	19076,	19147,	19135,	19184,	19106,	19396},
							{19781,	17199,	17175,	17079,	18359,	17165,	17266,	17292,	17213,	18169},
							{17338,	16503,	16515,	16397,	17791,	16470,	16585,	16608,	16534,	19212},
							{18373,	16738,	16746,	16694,	18174,	16924,	17043,	17073,	16985,	18220},
							{15522,	14334,	14289,	14188,	16019,	14116,	14221,	14227,	14126,	15816},
							{0 ,	0 ,	0 ,	0 ,	16773,	0,	0 ,	16529, 	0,	0}};

const u16 pdnd_min[19][10] ={
							{6601,	6574,	6486,	6465,	6480,	6490,	6479,	6553,	6401,	6494},
							{8739,	9012,	8999,	8937,	9045,	9141,	9108,	9209,	9132,	9176},
							{8519,	8543,	8471,	8437,	8476,	8513,	8480,	8559,	8419,	8386},
							{8696,	9043,	9028,	8974,	9072,	9136,	9132,	9220,	9149,	9185},
							{9232,	9219,	9185,	9160,	9201,	9216,	9203,	9279,	9173,	9018},
							{9059,	9447,	9454,	9385,	9511,	9572,	9577,	9635,	9581,	9615},
							{9830,	9636,	9648,	9565,	9687,	9666,	9691,	9742,	9682,	9398},
							{9615,	9838,	9846,	9783,	9912,	9945,	9972,	10053,	10003,	10024},
							{10446,	10048,	10063,	9990,	10087,	10087,	10107,	10160,	10109,	9678},
							{10269,	10239,	10225,	10177,	10242,	10321,	10324,	10409,	10338,	10426},
							{10277,	10283,	10266,	10267,	10281,	10339,	10320,	10433,	10374,	10342},
							{9628,	10412,	10446,	10418,	10473,	10564,	10560,	10630,	10530,	11967},
							{10716,	10685,	10710,	10635,	10728,	10766,	10767,	10819,	10728,	11109},
							{9772,	10861,	10871,	10853,	10932,	11003,	10991,	11040,	10962,	11252},
							{11637,	9055,	9031,	8935,	10215,	9021,	9122,	9148,	9069,	10025},
							{9194,	8359,	8371,	8253,	9647 ,	8326,	8441,	8464,	8390,	11068},
							{10229,	8594,	8602,	8550,	10030,	8780,	8899,	8929,	8841,	10076},
							{7378,	6190,	6145,	6044 ,	7875,	5972,	6077,	6083,	5982,	7672},
							{0 ,	0,	0,	0,	8629,	0,	0,	8385,	0,	0}};


const u16 hfdnd_max[19][10] ={
							{13082,	13098,	12985,	12943,	12947,	13007,	13029,	13094,	12924,	13000},
							{14898,	15156,	15087,	15012,	15069,	15264,	15260,	15330,	15262,	15279},
							{14490,	14503,	14426,	14381,	14285,	14457,	14448,	14522,	14407,	14334},
							{14430,	14724,	14672,	14641,	14527,	14838,	14845,	14924,	14845,	14860},
							{14641,	14668,	14563,	14514,	14310,	14645,	14641,	14712,	14600,	14430},
							{14176,	14572,	14562,	14493,	14264,	14714,	14734,	14808,	14729,	14740},
							{14553,	14440,	14380,	14326,	14011,	14485,	14512,	14565,	14478,	14169},
							{14003,	14283,	14261,	14193,	13832,	14421,	14454,	14529,	14451,	14465},
							{14510,	14148,	14037,	14034,	13548,	14198,	14211,	14282,	14204,	13688},
							{13855,	13955,	13878,	13793,	13272,	14059,	14075,	14138,	14076,	14102},
							{13549,	13573,	13493,	13467,	12799,	13649,	13660,	13743,	13665,	13316},
							{12223,	13357,	13273,	13244,	12551,	13473,	13496,	13574,	13496,	14837},
							{13249,	13179,	13103,	12997,	12252,	13244,	13269,	13308,	13230,	12750},
							{11122,	13081,	13027,	12969,	12125,	13200,	13218,	13303,	13213,	13512},
							{15700,	12957,	12810,	12788,	12408,	12942,	13013,	13071,	12949,	13521},
							{12922,	12446,	12346,	12252,	11965,	12434,	12525,	12566,	12451,	15451},
							{13466,	11798,	11688,	11667,	11348,	11879,	11986,	12031,	11905,	13144},
							{11636,	10449,	10351,	10316,	10362,	10372,	10448,	10496,	10342,	12179},
							{0,	0,	0,	0,	11523,	0,	0,	11342,	0,	0}};

const u16 hfdnd_min[19][10] ={
							{6648,	6664,	6551,	6509,	6513,	6573,	6595,	6660,	6490,	6566},
							{8464,	8722,	8653,	8578,	8635,	8830,	8826,	8896,	8828,	8845},
							{8056,	8069,	7992,	7947,	7851,	8023,	8014,	8088,	7973,	7900},
							{7996,	8290,	8238,	8207,	8093,	8404,	8411,	8490,	8411,	8426},
							{8207,	8234,	8129,	8080,	7876,	8211,	8207,	8278,	8166,	7996},
							{7742,	8138,	8128,	8059,	7830,	8280,	8300,	8374,	8295,	8306},
							{8119,	8006,	7946,	7892,	7577,	8051,	8078,	8131,	8044,	7735},
							{7569,	7849,	7827,	7759,	7398,	7987,	8020,	8095,	8017,	8031},
							{8076,	7714,	7603,	7600,	7114,	7764,	7777,	7848,	7770,	7254},
							{7421,	7521,	7444,	7359,	6838,	7625,	7641,	7704,	7642,	7668},
							{7115,	7139,	7059,	7033,	6365,	7215,	7226,	7309,	7231,	6882},
							{5789,	6923,	6839,	6810,	6117,	7039,	7062,	7140,	7062,	8403},
							{6815,	6745,	6669,	6563,	5818,	6810,	6835,	6874,	6796,	6316},
							{4688,	6647,	6593,	6535,	5691,	6766,	6784,	6869,	6779,	7078},
							{9266,	6523,	6376,	6354,	5974,	6508,	6579,	6637,	6515,	7087},
							{6488,	6012,	5912,	5818,	5531,	6000,	6091,	6132,	6017,	9017},
							{7032,	5364,	5254,	5233,	4914,	5445,	5552,	5597,	5471,	6710},
							{5202,	4015,	3917,	3882,	3928,	3938,	4014,	4062,	3908,	5745},
							{0 ,	0 ,	0 ,	0 ,	5089,	0 ,	0,	4908,	0,	0}};
